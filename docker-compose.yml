version: '3.8'

services:
  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - yusssss-net

  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    depends_on:
      keycloak:
        condition: service_healthy
      eureka-server:
        condition: service_started
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - yusssss-net

  user-service:
    build: ./user-service
    container_name: user-service
    depends_on:
      keycloak:
        condition: service_healthy
      user-service-db:
        condition: service_healthy
      eureka-server:
        condition: service_started
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-service-db:5432/userdb
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - KEYCLOAK_URL=http://keycloak:8080
    networks:
      - yusssss-net

  user-service-db:
    image: postgres:16
    container_name: user-service-db
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - user-data:/var/lib/postgresql/data
    networks:
      - yusssss-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d userdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  keycloak-db:
    image: postgres:16
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloakdb
      POSTGRES_USER: keycloakuser
      POSTGRES_PASSWORD: keycloakpassword
    ports:
      - "5434:5432"
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - yusssss-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloakuser -d keycloakdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.1
    container_name: keycloak
    depends_on:
      keycloak-db:
        condition: service_healthy
    environment:
      - KC_DB=postgres
      - KC_DB_URL_HOST=keycloak-db
      - KC_DB_URL_DATABASE=keycloakdb
      - KC_DB_USERNAME=keycloakuser
      - KC_DB_PASSWORD=keycloakpassword
      - KC_HTTP_RELATIVE_PATH=/
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin_password
      - KC_HOSTNAME=keycloak
      - KC_HOSTNAME_STRICT=false
      - KC_HEALTH_ENABLED=true
    command: start-dev
    ports:
      - "8080:8080"
      - "9000:9000"
    volumes:
      - keycloak-data:/opt/keycloak/data
    networks:
      - yusssss-net
    healthcheck:
      test: [
        "CMD-SHELL",
        "exec 3<>/dev/tcp/127.0.0.1/9000; \
        echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n' >&3; \
        if cat <&3 | grep -q '\"status\": \"UP\"'; then exit 0; else exit 1; fi"
      ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  ticket-service:
    build: ./ticket-service
    container_name: ticket-service
    depends_on:
      ticket-service-db:
        condition: service_healthy
      user-service:
        condition: service_started
      eureka-server:
        condition: service_started
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ticket-service-db:5432/ticketdb
      - SPRING_DATASOURCE_USERNAME=ticket
      - SPRING_DATASOURCE_PASSWORD=password
    networks:
      - yusssss-net

  ticket-service-db:
    image: postgres:16
    container_name: ticket-service-db
    environment:
      POSTGRES_DB: ticketdb
      POSTGRES_USER: ticket
      POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    volumes:
      - ticket-db-data:/var/lib/postgresql/data
    networks:
      - yusssss-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ticket -d ticketdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  event-service:
    build: ./event-service
    container_name: event-service
    depends_on:
      event-service-db:
        condition: service_healthy
      eureka-server:
        condition: service_started
    ports:
      - "8084:8084"
    environment:
      - DB_HOST=event-service-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=eventdb
      - EUREKA_URL=http://eureka-server:8761/eureka/v2
      - SERVICE_PORT=8084
    networks:
      - yusssss-net
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8084/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  event-service-db:
    image: postgres
    container_name: event-service-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: eventdb
    ports:
      - "5436:5432"
    networks:
      - yusssss-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d eventdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  notification-service:
    build: ./notification-service
    container_name: notification-service
    depends_on:
      notification-service-db:
        condition: service_healthy
      eureka-server:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://notification-service-db:5432/notificationdb
      - SPRING_DATASOURCE_USERNAME=notification_user
      - SPRING_DATASOURCE_PASSWORD=notification_password
      - EUREKA_URL=http://eureka-server:8761/eureka/v2
      - SERVICE_PORT=8085
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    networks:
      - yusssss-net
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8085/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  notification-service-db:
    image: postgres:16
    container_name: notification-service-db
    environment:
      POSTGRES_DB: notificationdb
      POSTGRES_USER: notification_user
      POSTGRES_PASSWORD: notification_password
    ports:
      - "5437:5432"
    volumes:
      - notification-db-data:/var/lib/postgresql/data
    networks:
      - yusssss-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U notification_user -d notificationdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - yusssss-net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  user-data:
  keycloak-data:
  keycloak-db-data:
  ticket-db-data:
  notification-db-data:

networks:
  yusssss-net:
    driver: bridge